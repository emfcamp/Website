"""Migration reset 2025-08-17

Revision ID: c9d6fc727cf0
Revises: None
Create Date: 2025-08-17 21:58:30.871512

"""

# revision identifiers, used by Alembic.
revision = 'c9d6fc727cf0'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_message_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('message', sa.String(), autoincrement=False, nullable=False),
    sa.Column('show', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('topic', sa.String(), autoincrement=False, nullable=True),
    sa.Column('end', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_admin_message_version'))
    )
    op.create_index(op.f('ix_admin_message_version_operation_type'), 'admin_message_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_admin_message_version_transaction_id'), 'admin_message_version', ['transaction_id'], unique=False)
    op.create_table('arrivals_view_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('required_permission_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_arrivals_view_version'))
    )
    op.create_index(op.f('ix_arrivals_view_version_name'), 'arrivals_view_version', ['name'], unique=False)
    op.create_index(op.f('ix_arrivals_view_version_operation_type'), 'arrivals_view_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_arrivals_view_version_required_permission_id'), 'arrivals_view_version', ['required_permission_id'], unique=False)
    op.create_index(op.f('ix_arrivals_view_version_transaction_id'), 'arrivals_view_version', ['transaction_id'], unique=False)
    op.create_table('bank_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sort_code', sa.String(), nullable=True),
    sa.Column('acct_id', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('payee_name', sa.String(), nullable=True),
    sa.Column('institution', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('swift', sa.String(), nullable=True),
    sa.Column('iban', sa.String(), nullable=True),
    sa.Column('wise_balance_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_account'))
    )
    op.create_index('ix_bank_account_sort_code_acct_id', 'bank_account', ['sort_code', 'acct_id'], unique=True)
    op.create_table('cfp_reviewer_tags_version',
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'tag_id', 'transaction_id', name=op.f('pk_cfp_reviewer_tags_version'))
    )
    op.create_index(op.f('ix_cfp_reviewer_tags_version_operation_type'), 'cfp_reviewer_tags_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_cfp_reviewer_tags_version_transaction_id'), 'cfp_reviewer_tags_version', ['transaction_id'], unique=False)
    op.create_table('cfp_vote_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('proposal_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=False),
    sa.Column('has_been_read', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('vote', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('note', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_cfp_vote_version'))
    )
    op.create_index(op.f('ix_cfp_vote_version_operation_type'), 'cfp_vote_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_cfp_vote_version_transaction_id'), 'cfp_vote_version', ['transaction_id'], unique=False)
    op.create_table('email_job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('text_body', sa.String(), nullable=False),
    sa.Column('html_body', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_job'))
    )
    op.create_table('feature_flag',
    sa.Column('feature', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('feature', name=op.f('pk_feature_flag'))
    )
    op.create_table('feature_flag_version',
    sa.Column('feature', sa.String(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('feature', 'transaction_id', name=op.f('pk_feature_flag_version'))
    )
    op.create_index(op.f('ix_feature_flag_version_operation_type'), 'feature_flag_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_feature_flag_version_transaction_id'), 'feature_flag_version', ['transaction_id'], unique=False)
    op.create_table('payment_sequence',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('name', name=op.f('pk_payment_sequence'))
    )
    op.create_table('payment_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.String(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.String(), autoincrement=False, nullable=False),
    sa.Column('amount_int', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=False),
    sa.Column('reminder_sent_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('expires', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('voucher_code', sa.String(), autoincrement=False, nullable=True),
    sa.Column('vat_invoice_number', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('bankref', sa.String(), autoincrement=False, nullable=True),
    sa.Column('intent_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('charge_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_payment_version'))
    )
    op.create_index(op.f('ix_payment_version_operation_type'), 'payment_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_payment_version_transaction_id'), 'payment_version', ['transaction_id'], unique=False)
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission'))
    )
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_table('product_group',
    sa.Column('capacity_max', sa.Integer(), nullable=True),
    sa.Column('capacity_used', sa.Integer(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['product_group.id'], name=op.f('fk_product_group_parent_id_product_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_group')),
    sa.UniqueConstraint('name', name=op.f('uq_product_group_name'))
    )
    op.create_table('product_view',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('cfp_accepted_only', sa.Boolean(), nullable=False),
    sa.Column('vouchers_only', sa.Boolean(), server_default='False', nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_view'))
    )
    op.create_index(op.f('ix_product_view_name'), 'product_view', ['name'], unique=False)
    op.create_table('proposal_allowed_venues_version',
    sa.Column('proposal_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('venue_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('proposal_id', 'venue_id', 'transaction_id', name=op.f('pk_proposal_allowed_venues_version'))
    )
    op.create_index(op.f('ix_proposal_allowed_venues_version_operation_type'), 'proposal_allowed_venues_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_proposal_allowed_venues_version_transaction_id'), 'proposal_allowed_venues_version', ['transaction_id'], unique=False)
    op.create_table('proposal_tag_version',
    sa.Column('proposal_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('proposal_id', 'tag_id', 'transaction_id', name=op.f('pk_proposal_tag_version'))
    )
    op.create_index(op.f('ix_proposal_tag_version_operation_type'), 'proposal_tag_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_proposal_tag_version_transaction_id'), 'proposal_tag_version', ['transaction_id'], unique=False)
    op.create_table('proposal_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('anonymiser_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(), autoincrement=False, nullable=False),
    sa.Column('title', sa.String(), autoincrement=False, nullable=False),
    sa.Column('description', sa.String(), autoincrement=False, nullable=False),
    sa.Column('equipment_required', sa.String(), autoincrement=False, nullable=True),
    sa.Column('funding_required', sa.String(), autoincrement=False, nullable=True),
    sa.Column('additional_info', sa.String(), autoincrement=False, nullable=True),
    sa.Column('length', sa.String(), autoincrement=False, nullable=True),
    sa.Column('notice_required', sa.String(), autoincrement=False, nullable=True),
    sa.Column('private_notes', sa.String(), autoincrement=False, nullable=True),
    sa.Column('needs_help', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('needs_money', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('one_day', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('has_rejected_email', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('user_scheduled', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('published_names', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_pronouns', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_title', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_description', sa.String(), autoincrement=False, nullable=True),
    sa.Column('arrival_period', sa.String(), autoincrement=False, nullable=True),
    sa.Column('departure_period', sa.String(), autoincrement=False, nullable=True),
    sa.Column('telephone_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('eventphone_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('may_record', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('video_privacy', sa.String(), autoincrement=False, nullable=True),
    sa.Column('needs_laptop', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('available_times', sa.String(), autoincrement=False, nullable=True),
    sa.Column('family_friendly', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('content_note', sa.String(), autoincrement=False, nullable=True),
    sa.Column('hide_from_schedule', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('manually_scheduled', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('allowed_times', sa.String(), autoincrement=False, nullable=True),
    sa.Column('scheduled_duration', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('scheduled_venue_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('potential_time', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('potential_venue_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('c3voc_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('youtube_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('thumbnail_url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('video_recording_lost', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('attendees', sa.String(), autoincrement=False, nullable=True),
    sa.Column('cost', sa.String(), autoincrement=False, nullable=True),
    sa.Column('age_range', sa.String(), autoincrement=False, nullable=True),
    sa.Column('participant_equipment', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_age_range', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_cost', sa.String(), autoincrement=False, nullable=True),
    sa.Column('published_participant_equipment', sa.String(), autoincrement=False, nullable=True),
    sa.Column('requires_ticket', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('total_tickets', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('non_lottery_tickets', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('valid_dbs', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('size', sa.String(), autoincrement=False, nullable=True),
    sa.Column('installation_funding', sa.String(), autoincrement=False, nullable=True),
    sa.Column('slide_link', sa.String(), autoincrement=False, nullable=True),
    sa.Column('session', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_proposal_version'))
    )
    op.create_index(op.f('ix_proposal_version_operation_type'), 'proposal_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_proposal_version_transaction_id'), 'proposal_version', ['transaction_id'], unique=False)
    op.create_table('purchase_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('purchaser_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('price_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('price_tier_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('refund_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('refund_request_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('modified', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=False),
    sa.Column('ticket_issued', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('redeemed', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_purchase_version'))
    )
    op.create_index(op.f('ix_purchase_version_operation_type'), 'purchase_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_purchase_version_owner_id'), 'purchase_version', ['owner_id'], unique=False)
    op.create_index(op.f('ix_purchase_version_purchaser_id'), 'purchase_version', ['purchaser_id'], unique=False)
    op.create_index(op.f('ix_purchase_version_transaction_id'), 'purchase_version', ['transaction_id'], unique=False)
    op.create_table('refund_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.String(), autoincrement=False, nullable=False),
    sa.Column('amount_int', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.DateTime(), autoincrement=False, nullable=False),
    sa.Column('refundid', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_refund_version'))
    )
    op.create_index(op.f('ix_refund_version_operation_type'), 'refund_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_refund_version_transaction_id'), 'refund_version', ['transaction_id'], unique=False)
    op.create_table('scheduled_task_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration', sa.Interval(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scheduled_task_result'))
    )
    op.create_table('site_state',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('name', name=op.f('pk_site_state'))
    )
    op.create_table('site_state_version',
    sa.Column('name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('name', 'transaction_id', name=op.f('pk_site_state_version'))
    )
    op.create_index(op.f('ix_site_state_version_operation_type'), 'site_state_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_site_state_version_transaction_id'), 'site_state_version', ['transaction_id'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag')),
    sa.UniqueConstraint('tag', name=op.f('uq_tag_tag'))
    )
    op.create_table('tag_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('tag', sa.String(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_tag_version'))
    )
    op.create_index(op.f('ix_tag_version_operation_type'), 'tag_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_tag_version_transaction_id'), 'tag_version', ['transaction_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('will_have_ticket', sa.Boolean(), nullable=False),
    sa.Column('checkin_note', sa.String(), nullable=True),
    sa.Column('promo_opt_in', sa.Boolean(), nullable=False),
    sa.Column('cfp_invite_reason', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_table('user_permission_version',
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', 'transaction_id', name=op.f('pk_user_permission_version'))
    )
    op.create_index(op.f('ix_user_permission_version_operation_type'), 'user_permission_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_user_permission_version_transaction_id'), 'user_permission_version', ['transaction_id'], unique=False)
    op.create_table('user_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('email', sa.String(), autoincrement=False, nullable=True),
    sa.Column('name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('company', sa.String(), autoincrement=False, nullable=True),
    sa.Column('will_have_ticket', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('checkin_note', sa.String(), autoincrement=False, nullable=True),
    sa.Column('promo_opt_in', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('cfp_invite_reason', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_user_version'))
    )
    op.create_index(op.f('ix_user_version_email'), 'user_version', ['email'], unique=False)
    op.create_index(op.f('ix_user_version_name'), 'user_version', ['name'], unique=False)
    op.create_index(op.f('ix_user_version_operation_type'), 'user_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_user_version_transaction_id'), 'user_version', ['transaction_id'], unique=False)
    op.create_table('village',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_village')),
    sa.UniqueConstraint('name', name=op.f('uq_village_name'))
    )
    op.create_index('ix_village_location', 'village', ['location'], unique=False, postgresql_using='gist')
    op.create_table('village_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=False),
    sa.Column('description', sa.String(), autoincrement=False, nullable=True),
    sa.Column('url', sa.String(), autoincrement=False, nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_village_version'))
    )
    op.create_index(op.f('ix_village_version_operation_type'), 'village_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_village_version_transaction_id'), 'village_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_notify_job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('text_body', sa.String(), nullable=False),
    sa.Column('html_body', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_notify_job'))
    )
    op.create_table('volunteer_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('full_description_md', sa.Text(), nullable=True),
    sa.Column('instructions_url', sa.String(), nullable=True),
    sa.Column('role_notes', sa.String(), nullable=True),
    sa.Column('over_18_only', sa.Boolean(), nullable=False),
    sa.Column('requires_training', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_role'))
    )
    op.create_index(op.f('ix_volunteer_role_name'), 'volunteer_role', ['name'], unique=True)
    op.create_table('volunteer_role_interest_version',
    sa.Column('volunteer_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('volunteer_id', 'role_id', 'transaction_id', name=op.f('pk_volunteer_role_interest_version'))
    )
    op.create_index(op.f('ix_volunteer_role_interest_version_operation_type'), 'volunteer_role_interest_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_role_interest_version_transaction_id'), 'volunteer_role_interest_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_role_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_role_permission'))
    )
    op.create_index(op.f('ix_volunteer_role_permission_name'), 'volunteer_role_permission', ['name'], unique=True)
    op.create_table('volunteer_role_permission_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_volunteer_role_permission_version'))
    )
    op.create_index(op.f('ix_volunteer_role_permission_version_name'), 'volunteer_role_permission_version', ['name'], unique=False)
    op.create_index(op.f('ix_volunteer_role_permission_version_operation_type'), 'volunteer_role_permission_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_role_permission_version_transaction_id'), 'volunteer_role_permission_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_role_training_version',
    sa.Column('volunteer_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('volunteer_id', 'role_id', 'transaction_id', name=op.f('pk_volunteer_role_training_version'))
    )
    op.create_index(op.f('ix_volunteer_role_training_version_operation_type'), 'volunteer_role_training_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_role_training_version_transaction_id'), 'volunteer_role_training_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_shift_entry_version',
    sa.Column('shift_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('state', sa.String(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('shift_id', 'user_id', 'transaction_id', name=op.f('pk_volunteer_shift_entry_version'))
    )
    op.create_index(op.f('ix_volunteer_shift_entry_version_operation_type'), 'volunteer_shift_entry_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_shift_entry_version_transaction_id'), 'volunteer_shift_entry_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_shift_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('venue_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('proposal_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('start', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('end', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('min_needed', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('max_needed', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_volunteer_shift_version'))
    )
    op.create_index(op.f('ix_volunteer_shift_version_operation_type'), 'volunteer_shift_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_shift_version_transaction_id'), 'volunteer_shift_version', ['transaction_id'], unique=False)
    op.create_table('volunteer_venue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('mapref', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_venue'))
    )
    op.create_index(op.f('ix_volunteer_venue_name'), 'volunteer_venue', ['name'], unique=True)
    op.create_table('volunteer_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('nickname', sa.String(), autoincrement=False, nullable=True),
    sa.Column('banned', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('volunteer_phone', sa.String(), autoincrement=False, nullable=True),
    sa.Column('volunteer_email', sa.String(), autoincrement=False, nullable=True),
    sa.Column('over_18', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('allow_comms_during_event', sa.Boolean(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_volunteer_version'))
    )
    op.create_index(op.f('ix_volunteer_version_operation_type'), 'volunteer_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_volunteer_version_transaction_id'), 'volunteer_version', ['transaction_id'], unique=False)
    op.create_table('admin_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('show', sa.Boolean(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('fk_admin_message_created_by_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_admin_message'))
    )
    op.create_table('arrivals_view',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('required_permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['required_permission_id'], ['permission.id'], name=op.f('fk_arrivals_view_required_permission_id_permission')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_arrivals_view'))
    )
    op.create_index(op.f('ix_arrivals_view_name'), 'arrivals_view', ['name'], unique=False)
    op.create_index(op.f('ix_arrivals_view_required_permission_id'), 'arrivals_view', ['required_permission_id'], unique=False)
    op.create_table('calendar_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('refreshed_at', sa.DateTime(), nullable=True),
    sa.Column('displayed', sa.Boolean(), nullable=False),
    sa.Column('published', sa.Boolean(), nullable=False),
    sa.Column('main_venue', sa.String(), nullable=True),
    sa.Column('contact_phone', sa.String(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_calendar_source_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_calendar_source'))
    )
    op.create_index(op.f('ix_calendar_source_user_id'), 'calendar_source', ['user_id'], unique=False)
    op.create_table('cfp_reviewer_tags',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_cfp_reviewer_tags_tag_id_tag')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_cfp_reviewer_tags_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'tag_id', name=op.f('pk_cfp_reviewer_tags'))
    )
    op.create_table('diversity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('ethnicity', sa.String(), nullable=True),
    sa.Column('disability', sa.String(), nullable=True),
    sa.Column('sexuality', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_diversity_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_diversity'))
    )
    op.create_table('email_recipient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('sent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['email_job.id'], name=op.f('fk_email_recipient_job_id_email_job')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_email_recipient_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_recipient'))
    )
    op.create_table('product',
    sa.Column('capacity_max', sa.Integer(), nullable=True),
    sa.Column('capacity_used', sa.Integer(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['product_group.id'], name=op.f('fk_product_group_id_product_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product')),
    sa.UniqueConstraint('name', 'group_id', name=op.f('uq_product_name'))
    )
    op.create_table('shipping',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address_1', sa.String(), nullable=True),
    sa.Column('address_2', sa.String(), nullable=True),
    sa.Column('town', sa.String(), nullable=True),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_shipping_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_shipping'))
    )
    op.create_table('transaction',
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_transaction_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction'))
    )
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    op.create_table('user_permission',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_user_permission_permission_id_permission')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_permission_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name=op.f('pk_user_permission'))
    )
    op.create_table('venue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('allowed_types', postgresql.ARRAY(sa.String()), server_default=sa.text("'{}'::varchar[]"), nullable=False),
    sa.Column('default_for_types', postgresql.ARRAY(sa.String()), server_default=sa.text("'{}'::varchar[]"), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('scheduled_content_only', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], name=op.f('fk_venue_village_id_village')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_venue')),
    sa.UniqueConstraint('name', name='_venue_name_uniq')
    )
    op.create_table('village_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_village_member_user_id_user')),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], name=op.f('fk_village_member_village_id_village')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_village_member')),
    sa.UniqueConstraint('user_id', name=op.f('uq_village_member_user_id'))
    )
    op.create_table('village_requirements',
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('num_attendees', sa.Integer(), nullable=True),
    sa.Column('size_sqm', sa.Integer(), nullable=True),
    sa.Column('power_requirements', sa.String(), nullable=True),
    sa.Column('noise', sa.String(), nullable=True),
    sa.Column('structures', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], name=op.f('fk_village_requirements_village_id_village')),
    sa.PrimaryKeyConstraint('village_id', name=op.f('pk_village_requirements'))
    )
    op.create_table('volunteer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('banned', sa.Boolean(), nullable=False),
    sa.Column('volunteer_phone', sa.String(), nullable=True),
    sa.Column('volunteer_email', sa.String(), nullable=True),
    sa.Column('over_18', sa.Boolean(), nullable=False),
    sa.Column('allow_comms_during_event', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_volunteer_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer'))
    )
    op.create_table('volunteer_role_admin',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['volunteer_role.id'], name=op.f('fk_volunteer_role_admin_role_id_volunteer_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_volunteer_role_admin_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_volunteer_role_admin'))
    )
    op.create_table('voucher',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('product_view_id', sa.Integer(), nullable=True),
    sa.Column('purchases_remaining', sa.Integer(), server_default='1', nullable=False),
    sa.Column('tickets_remaining', sa.Integer(), server_default='2', nullable=False),
    sa.ForeignKeyConstraint(['product_view_id'], ['product_view.id'], name=op.f('fk_voucher_product_view_id_product_view')),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_voucher'))
    )
    op.create_index(op.f('ix_voucher_email'), 'voucher', ['email'], unique=False)
    op.create_table('arrivals_view_product',
    sa.Column('view_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_arrivals_view_product_product_id_product')),
    sa.ForeignKeyConstraint(['view_id'], ['arrivals_view.id'], name=op.f('fk_arrivals_view_product_view_id_arrivals_view')),
    sa.PrimaryKeyConstraint('view_id', 'product_id', name=op.f('pk_arrivals_view_product'))
    )
    op.create_table('calendar_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(), nullable=True),
    sa.Column('start_dt', sa.DateTime(), nullable=False),
    sa.Column('end_dt', sa.DateTime(), nullable=False),
    sa.Column('displayed', sa.Boolean(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['calendar_source.id'], name=op.f('fk_calendar_event_source_id_calendar_source')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_calendar_event')),
    sa.UniqueConstraint('source_id', 'uid', name=op.f('uq_calendar_event_source_id'))
    )
    op.create_index(op.f('ix_calendar_event_source_id'), 'calendar_event', ['source_id'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('amount_int', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('reminder_sent_at', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('voucher_code', sa.String(), nullable=True),
    sa.Column('vat_invoice_number', sa.Integer(), nullable=True),
    sa.Column('bankref', sa.String(), nullable=True),
    sa.Column('intent_id', sa.String(), nullable=True),
    sa.Column('charge_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_payment_user_id_user')),
    sa.ForeignKeyConstraint(['voucher_code'], ['voucher.code'], name=op.f('fk_payment_voucher_code_voucher')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment')),
    sa.UniqueConstraint('bankref', name=op.f('uq_payment_bankref')),
    sa.UniqueConstraint('charge_id', name=op.f('uq_payment_charge_id')),
    sa.UniqueConstraint('intent_id', name=op.f('uq_payment_intent_id'))
    )
    op.create_table('price_tier',
    sa.Column('capacity_max', sa.Integer(), nullable=True),
    sa.Column('capacity_used', sa.Integer(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('personal_limit', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('vat_rate', sa.Numeric(precision=4, scale=3), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_price_tier_product_id_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_price_tier')),
    sa.UniqueConstraint('name', 'product_id', name=op.f('uq_price_tier_name'))
    )
    op.create_table('product_view_product',
    sa.Column('view_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_product_view_product_product_id_product')),
    sa.ForeignKeyConstraint(['view_id'], ['product_view.id'], name=op.f('fk_product_view_product_view_id_product_view')),
    sa.PrimaryKeyConstraint('view_id', 'product_id', name=op.f('pk_product_view_product'))
    )
    op.create_table('proposal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('anonymiser_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('equipment_required', sa.String(), nullable=True),
    sa.Column('funding_required', sa.String(), nullable=True),
    sa.Column('additional_info', sa.String(), nullable=True),
    sa.Column('length', sa.String(), nullable=True),
    sa.Column('notice_required', sa.String(), nullable=True),
    sa.Column('private_notes', sa.String(), nullable=True),
    sa.Column('needs_help', sa.Boolean(), nullable=False),
    sa.Column('needs_money', sa.Boolean(), nullable=False),
    sa.Column('one_day', sa.Boolean(), nullable=False),
    sa.Column('has_rejected_email', sa.Boolean(), nullable=False),
    sa.Column('user_scheduled', sa.Boolean(), nullable=False),
    sa.Column('published_names', sa.String(), nullable=True),
    sa.Column('published_pronouns', sa.String(), nullable=True),
    sa.Column('published_title', sa.String(), nullable=True),
    sa.Column('published_description', sa.String(), nullable=True),
    sa.Column('arrival_period', sa.String(), nullable=True),
    sa.Column('departure_period', sa.String(), nullable=True),
    sa.Column('telephone_number', sa.String(), nullable=True),
    sa.Column('eventphone_number', sa.String(), nullable=True),
    sa.Column('may_record', sa.Boolean(), nullable=True),
    sa.Column('video_privacy', sa.String(), nullable=True),
    sa.Column('needs_laptop', sa.Boolean(), nullable=True),
    sa.Column('available_times', sa.String(), nullable=True),
    sa.Column('family_friendly', sa.Boolean(), nullable=True),
    sa.Column('content_note', sa.String(), nullable=True),
    sa.Column('hide_from_schedule', sa.Boolean(), nullable=False),
    sa.Column('manually_scheduled', sa.Boolean(), nullable=False),
    sa.Column('allowed_times', sa.String(), nullable=True),
    sa.Column('scheduled_duration', sa.Integer(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('scheduled_venue_id', sa.Integer(), nullable=True),
    sa.Column('potential_time', sa.DateTime(), nullable=True),
    sa.Column('potential_venue_id', sa.Integer(), nullable=True),
    sa.Column('c3voc_url', sa.String(), nullable=True),
    sa.Column('youtube_url', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('video_recording_lost', sa.Boolean(), nullable=True),
    sa.Column('attendees', sa.String(), nullable=True),
    sa.Column('cost', sa.String(), nullable=True),
    sa.Column('age_range', sa.String(), nullable=True),
    sa.Column('participant_equipment', sa.String(), nullable=True),
    sa.Column('published_age_range', sa.String(), nullable=True),
    sa.Column('published_cost', sa.String(), nullable=True),
    sa.Column('published_participant_equipment', sa.String(), nullable=True),
    sa.Column('requires_ticket', sa.Boolean(), nullable=True),
    sa.Column('total_tickets', sa.Integer(), nullable=True),
    sa.Column('non_lottery_tickets', sa.Integer(), nullable=True),
    sa.Column('valid_dbs', sa.Boolean(), nullable=False),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('installation_funding', sa.String(), nullable=True),
    sa.Column('slide_link', sa.String(), nullable=True),
    sa.Column('session', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['anonymiser_id'], ['user.id'], name=op.f('fk_proposal_anonymiser_id_user')),
    sa.ForeignKeyConstraint(['potential_venue_id'], ['venue.id'], name=op.f('fk_proposal_potential_venue_id_venue')),
    sa.ForeignKeyConstraint(['scheduled_venue_id'], ['venue.id'], name=op.f('fk_proposal_scheduled_venue_id_venue')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_proposal_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_proposal'))
    )
    op.create_table('volunteer_notify_recipient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('sent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['volunteer_notify_job.id'], name=op.f('fk_volunteer_notify_recipient_job_id_volunteer_notify_job')),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteer.id'], name=op.f('fk_volunteer_notify_recipient_volunteer_id_volunteer')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_notify_recipient'))
    )
    op.create_table('volunteer_role_interest',
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['volunteer_role.id'], name=op.f('fk_volunteer_role_interest_role_id_volunteer_role')),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteer.id'], name=op.f('fk_volunteer_role_interest_volunteer_id_volunteer')),
    sa.PrimaryKeyConstraint('volunteer_id', 'role_id', name=op.f('pk_volunteer_role_interest'))
    )
    op.create_table('volunteer_role_training',
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['volunteer_role.id'], name=op.f('fk_volunteer_role_training_role_id_volunteer_role')),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteer.id'], name=op.f('fk_volunteer_role_training_volunteer_id_volunteer')),
    sa.PrimaryKeyConstraint('volunteer_id', 'role_id', name=op.f('pk_volunteer_role_training'))
    )
    op.create_table('bank_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('posted', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('amount_int', sa.Integer(), nullable=False),
    sa.Column('fit_id', sa.String(), nullable=True),
    sa.Column('wise_id', sa.String(), nullable=True),
    sa.Column('payee', sa.String(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('suppressed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['bank_account.id'], name=op.f('fk_bank_transaction_account_id_bank_account')),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('fk_bank_transaction_payment_id_payment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_transaction'))
    )
    op.create_index(op.f('ix_bank_transaction_fit_id'), 'bank_transaction', ['fit_id'], unique=False)
    op.create_index('ix_bank_transaction_u1', 'bank_transaction', ['account_id', 'posted', 'type', 'amount_int', 'payee', 'fit_id'], unique=True)
    op.create_index(op.f('ix_bank_transaction_wise_id'), 'bank_transaction', ['wise_id'], unique=False)
    op.create_table('cfp_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('is_to_admin', sa.Boolean(), nullable=True),
    sa.Column('has_been_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], name=op.f('fk_cfp_message_from_user_id_user')),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_cfp_message_proposal_id_proposal')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cfp_message'))
    )
    op.create_table('cfp_vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('has_been_read', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('vote', sa.Integer(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_cfp_vote_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_cfp_vote_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cfp_vote'))
    )
    op.create_index('ix_cfp_vote_user_id_proposal_id', 'cfp_vote', ['user_id', 'proposal_id'], unique=True)
    op.create_table('event_ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('ticket_count', sa.Integer(), nullable=False),
    sa.Column('ticket_codes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_event_ticket_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_event_ticket_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event_ticket'))
    )
    op.create_table('favourite_calendar_event',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['calendar_event.id'], name=op.f('fk_favourite_calendar_event_event_id_calendar_event')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_favourite_calendar_event_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'event_id', name=op.f('pk_favourite_calendar_event'))
    )
    op.create_table('favourite_proposal',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_favourite_proposal_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_favourite_proposal_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'proposal_id', name=op.f('pk_favourite_proposal'))
    )
    op.create_index(op.f('ix_favourite_proposal_proposal_id'), 'favourite_proposal', ['proposal_id'], unique=False)
    op.create_table('price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price_tier_id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('price_int', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['price_tier_id'], ['price_tier.id'], name=op.f('fk_price_price_tier_id_price_tier')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_price'))
    )
    op.create_table('proposal_allowed_venues',
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_proposal_allowed_venues_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['venue_id'], ['venue.id'], name=op.f('fk_proposal_allowed_venues_venue_id_venue')),
    sa.PrimaryKeyConstraint('proposal_id', 'venue_id', name=op.f('pk_proposal_allowed_venues'))
    )
    op.create_table('proposal_tag',
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_proposal_tag_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_proposal_tag_tag_id_tag')),
    sa.PrimaryKeyConstraint('proposal_id', 'tag_id', name=op.f('pk_proposal_tag'))
    )
    op.create_table('refund',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('amount_int', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('refundid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('fk_refund_payment_id_payment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refund')),
    sa.UniqueConstraint('refundid', name=op.f('uq_refund_refundid'))
    )
    op.create_table('refund_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('donation', sa.Numeric(), server_default='0', nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('sort_code', sa.String(), nullable=True),
    sa.Column('account', sa.String(), nullable=True),
    sa.Column('swiftbic', sa.String(), nullable=True),
    sa.Column('iban', sa.String(), nullable=True),
    sa.Column('payee_name', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('fk_refund_request_payment_id_payment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refund_request'))
    )
    op.create_table('volunteer_shift',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('min_needed', sa.Integer(), nullable=False),
    sa.Column('max_needed', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name=op.f('fk_volunteer_shift_proposal_id_proposal')),
    sa.ForeignKeyConstraint(['role_id'], ['volunteer_role.id'], name=op.f('fk_volunteer_shift_role_id_volunteer_role')),
    sa.ForeignKeyConstraint(['venue_id'], ['volunteer_venue.id'], name=op.f('fk_volunteer_shift_venue_id_volunteer_venue')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_volunteer_shift'))
    )
    op.create_table('purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('purchaser_id', sa.Integer(), nullable=True),
    sa.Column('price_id', sa.Integer(), nullable=False),
    sa.Column('price_tier_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('refund_id', sa.Integer(), nullable=True),
    sa.Column('refund_request_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('ticket_issued', sa.Boolean(), nullable=False),
    sa.Column('redeemed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_purchase_owner_id_user')),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('fk_purchase_payment_id_payment')),
    sa.ForeignKeyConstraint(['price_id'], ['price.id'], name=op.f('fk_purchase_price_id_price')),
    sa.ForeignKeyConstraint(['price_tier_id'], ['price_tier.id'], name=op.f('fk_purchase_price_tier_id_price_tier')),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_purchase_product_id_product')),
    sa.ForeignKeyConstraint(['purchaser_id'], ['user.id'], name=op.f('fk_purchase_purchaser_id_user')),
    sa.ForeignKeyConstraint(['refund_id'], ['refund.id'], name=op.f('fk_purchase_refund_id_refund')),
    sa.ForeignKeyConstraint(['refund_request_id'], ['refund_request.id'], name=op.f('fk_purchase_refund_request_id_refund_request')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase'))
    )
    op.create_index(op.f('ix_purchase_owner_id'), 'purchase', ['owner_id'], unique=False)
    op.create_index(op.f('ix_purchase_purchaser_id'), 'purchase', ['purchaser_id'], unique=False)
    op.create_table('volunteer_shift_entry',
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['volunteer_shift.id'], name=op.f('fk_volunteer_shift_entry_shift_id_volunteer_shift')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_volunteer_shift_entry_user_id_user')),
    sa.PrimaryKeyConstraint('shift_id', 'user_id', name=op.f('pk_volunteer_shift_entry'))
    )
    op.create_table('purchase_transfer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], name=op.f('fk_purchase_transfer_from_user_id_user')),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.id'], name=op.f('fk_purchase_transfer_purchase_id_purchase')),
    sa.ForeignKeyConstraint(['to_user_id'], ['user.id'], name=op.f('fk_purchase_transfer_to_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_transfer'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('purchase_transfer')
    op.drop_table('volunteer_shift_entry')
    op.drop_index(op.f('ix_purchase_purchaser_id'), table_name='purchase')
    op.drop_index(op.f('ix_purchase_owner_id'), table_name='purchase')
    op.drop_table('purchase')
    op.drop_table('volunteer_shift')
    op.drop_table('refund_request')
    op.drop_table('refund')
    op.drop_table('proposal_tag')
    op.drop_table('proposal_allowed_venues')
    op.drop_table('price')
    op.drop_index(op.f('ix_favourite_proposal_proposal_id'), table_name='favourite_proposal')
    op.drop_table('favourite_proposal')
    op.drop_table('favourite_calendar_event')
    op.drop_table('event_ticket')
    op.drop_index('ix_cfp_vote_user_id_proposal_id', table_name='cfp_vote')
    op.drop_table('cfp_vote')
    op.drop_table('cfp_message')
    op.drop_index(op.f('ix_bank_transaction_wise_id'), table_name='bank_transaction')
    op.drop_index('ix_bank_transaction_u1', table_name='bank_transaction')
    op.drop_index(op.f('ix_bank_transaction_fit_id'), table_name='bank_transaction')
    op.drop_table('bank_transaction')
    op.drop_table('volunteer_role_training')
    op.drop_table('volunteer_role_interest')
    op.drop_table('volunteer_notify_recipient')
    op.drop_table('proposal')
    op.drop_table('product_view_product')
    op.drop_table('price_tier')
    op.drop_table('payment')
    op.drop_index(op.f('ix_calendar_event_source_id'), table_name='calendar_event')
    op.drop_table('calendar_event')
    op.drop_table('arrivals_view_product')
    op.drop_index(op.f('ix_voucher_email'), table_name='voucher')
    op.drop_table('voucher')
    op.drop_table('volunteer_role_admin')
    op.drop_table('volunteer')
    op.drop_table('village_requirements')
    op.drop_table('village_member')
    op.drop_index('idx_venue_location', table_name='venue', postgresql_using='gist')
    op.drop_table('venue')
    op.drop_table('user_permission')
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_table('shipping')
    op.drop_table('product')
    op.drop_table('email_recipient')
    op.drop_table('diversity')
    op.drop_table('cfp_reviewer_tags')
    op.drop_index(op.f('ix_calendar_source_user_id'), table_name='calendar_source')
    op.drop_table('calendar_source')
    op.drop_index(op.f('ix_arrivals_view_required_permission_id'), table_name='arrivals_view')
    op.drop_index(op.f('ix_arrivals_view_name'), table_name='arrivals_view')
    op.drop_table('arrivals_view')
    op.drop_table('admin_message')
    op.drop_index(op.f('ix_volunteer_version_transaction_id'), table_name='volunteer_version')
    op.drop_index(op.f('ix_volunteer_version_operation_type'), table_name='volunteer_version')
    op.drop_table('volunteer_version')
    op.drop_index(op.f('ix_volunteer_venue_name'), table_name='volunteer_venue')
    op.drop_table('volunteer_venue')
    op.drop_index(op.f('ix_volunteer_shift_version_transaction_id'), table_name='volunteer_shift_version')
    op.drop_index(op.f('ix_volunteer_shift_version_operation_type'), table_name='volunteer_shift_version')
    op.drop_table('volunteer_shift_version')
    op.drop_index(op.f('ix_volunteer_shift_entry_version_transaction_id'), table_name='volunteer_shift_entry_version')
    op.drop_index(op.f('ix_volunteer_shift_entry_version_operation_type'), table_name='volunteer_shift_entry_version')
    op.drop_table('volunteer_shift_entry_version')
    op.drop_index(op.f('ix_volunteer_role_training_version_transaction_id'), table_name='volunteer_role_training_version')
    op.drop_index(op.f('ix_volunteer_role_training_version_operation_type'), table_name='volunteer_role_training_version')
    op.drop_table('volunteer_role_training_version')
    op.drop_index(op.f('ix_volunteer_role_permission_version_transaction_id'), table_name='volunteer_role_permission_version')
    op.drop_index(op.f('ix_volunteer_role_permission_version_operation_type'), table_name='volunteer_role_permission_version')
    op.drop_index(op.f('ix_volunteer_role_permission_version_name'), table_name='volunteer_role_permission_version')
    op.drop_table('volunteer_role_permission_version')
    op.drop_index(op.f('ix_volunteer_role_permission_name'), table_name='volunteer_role_permission')
    op.drop_table('volunteer_role_permission')
    op.drop_index(op.f('ix_volunteer_role_interest_version_transaction_id'), table_name='volunteer_role_interest_version')
    op.drop_index(op.f('ix_volunteer_role_interest_version_operation_type'), table_name='volunteer_role_interest_version')
    op.drop_table('volunteer_role_interest_version')
    op.drop_index(op.f('ix_volunteer_role_name'), table_name='volunteer_role')
    op.drop_table('volunteer_role')
    op.drop_table('volunteer_notify_job')
    op.drop_index(op.f('ix_village_version_transaction_id'), table_name='village_version')
    op.drop_index(op.f('ix_village_version_operation_type'), table_name='village_version')
    op.drop_table('village_version')
    op.drop_index('ix_village_location', table_name='village', postgresql_using='gist')
    op.drop_table('village')
    op.drop_index(op.f('ix_user_version_transaction_id'), table_name='user_version')
    op.drop_index(op.f('ix_user_version_operation_type'), table_name='user_version')
    op.drop_index(op.f('ix_user_version_name'), table_name='user_version')
    op.drop_index(op.f('ix_user_version_email'), table_name='user_version')
    op.drop_table('user_version')
    op.drop_index(op.f('ix_user_permission_version_transaction_id'), table_name='user_permission_version')
    op.drop_index(op.f('ix_user_permission_version_operation_type'), table_name='user_permission_version')
    op.drop_table('user_permission_version')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_tag_version_transaction_id'), table_name='tag_version')
    op.drop_index(op.f('ix_tag_version_operation_type'), table_name='tag_version')
    op.drop_table('tag_version')
    op.drop_table('tag')
    op.drop_index(op.f('ix_site_state_version_transaction_id'), table_name='site_state_version')
    op.drop_index(op.f('ix_site_state_version_operation_type'), table_name='site_state_version')
    op.drop_table('site_state_version')
    op.drop_table('site_state')
    op.drop_table('scheduled_task_result')
    op.drop_index(op.f('ix_refund_version_transaction_id'), table_name='refund_version')
    op.drop_index(op.f('ix_refund_version_operation_type'), table_name='refund_version')
    op.drop_table('refund_version')
    op.drop_index(op.f('ix_purchase_version_transaction_id'), table_name='purchase_version')
    op.drop_index(op.f('ix_purchase_version_purchaser_id'), table_name='purchase_version')
    op.drop_index(op.f('ix_purchase_version_owner_id'), table_name='purchase_version')
    op.drop_index(op.f('ix_purchase_version_operation_type'), table_name='purchase_version')
    op.drop_table('purchase_version')
    op.drop_index(op.f('ix_proposal_version_transaction_id'), table_name='proposal_version')
    op.drop_index(op.f('ix_proposal_version_operation_type'), table_name='proposal_version')
    op.drop_table('proposal_version')
    op.drop_index(op.f('ix_proposal_tag_version_transaction_id'), table_name='proposal_tag_version')
    op.drop_index(op.f('ix_proposal_tag_version_operation_type'), table_name='proposal_tag_version')
    op.drop_table('proposal_tag_version')
    op.drop_index(op.f('ix_proposal_allowed_venues_version_transaction_id'), table_name='proposal_allowed_venues_version')
    op.drop_index(op.f('ix_proposal_allowed_venues_version_operation_type'), table_name='proposal_allowed_venues_version')
    op.drop_table('proposal_allowed_venues_version')
    op.drop_index(op.f('ix_product_view_name'), table_name='product_view')
    op.drop_table('product_view')
    op.drop_table('product_group')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_payment_version_transaction_id'), table_name='payment_version')
    op.drop_index(op.f('ix_payment_version_operation_type'), table_name='payment_version')
    op.drop_table('payment_version')
    op.drop_table('payment_sequence')
    op.drop_index(op.f('ix_feature_flag_version_transaction_id'), table_name='feature_flag_version')
    op.drop_index(op.f('ix_feature_flag_version_operation_type'), table_name='feature_flag_version')
    op.drop_table('feature_flag_version')
    op.drop_table('feature_flag')
    op.drop_table('email_job')
    op.drop_index(op.f('ix_cfp_vote_version_transaction_id'), table_name='cfp_vote_version')
    op.drop_index(op.f('ix_cfp_vote_version_operation_type'), table_name='cfp_vote_version')
    op.drop_table('cfp_vote_version')
    op.drop_index(op.f('ix_cfp_reviewer_tags_version_transaction_id'), table_name='cfp_reviewer_tags_version')
    op.drop_index(op.f('ix_cfp_reviewer_tags_version_operation_type'), table_name='cfp_reviewer_tags_version')
    op.drop_table('cfp_reviewer_tags_version')
    op.drop_index('ix_bank_account_sort_code_acct_id', table_name='bank_account')
    op.drop_table('bank_account')
    op.drop_index(op.f('ix_arrivals_view_version_transaction_id'), table_name='arrivals_view_version')
    op.drop_index(op.f('ix_arrivals_view_version_required_permission_id'), table_name='arrivals_view_version')
    op.drop_index(op.f('ix_arrivals_view_version_operation_type'), table_name='arrivals_view_version')
    op.drop_index(op.f('ix_arrivals_view_version_name'), table_name='arrivals_view_version')
    op.drop_table('arrivals_view_version')
    op.drop_index(op.f('ix_admin_message_version_transaction_id'), table_name='admin_message_version')
    op.drop_index(op.f('ix_admin_message_version_operation_type'), table_name='admin_message_version')
    op.drop_table('admin_message_version')
    # ### end Alembic commands ###
